{"version":3,"sources":["context/NightMode.jsx","components/Header.jsx","context/CrudContext.jsx","components/Homework.jsx","context/ModalContext.jsx","components/ModalForm.jsx","components/Add.jsx","components/Main.jsx","App.jsx","components/Home.jsx","reportWebVitals.js","index.js"],"names":["NightMode","createContext","NightModeProvider","children","useState","data","nightMode","setNightMode","Provider","value","Header","useContext","className","onClick","xmlns","width","height","fill","viewBox","d","CrudContext","CrudProvider","db","setDb","dataToEdit","setDataToEdit","createHomework","id","Date","now","updateHomework","newData","map","el","deleteHomework","window","confirm","homeworkDelete","filter","item","completeHomework","complete","Homework","description","setDescription","setComplete","title","alert","edit","fillRule","activity","ModalContext","ModalProvider","modal","setModal","ModalForm","Add","setForm","initialForm","Main","form","useEffect","handleChange","e","target","name","length","onSubmit","preventDefault","htmlFor","type","onChange","cols","rows","App","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a02d8318.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nconst NightMode = createContext();\r\n\r\nconst NightModeProvider = ({ children }) => {\r\n  const [nightMode, setNightMode] = useState(true);\r\n  const data = { nightMode, setNightMode };\r\n  return <NightMode.Provider value={data}>{children}</NightMode.Provider>;\r\n};\r\nexport { NightModeProvider };\r\nexport default NightMode;\r\n","import React, { useContext } from \"react\";\r\nimport NightMode from \"../context/NightMode\";\r\n\r\nconst Header = () => {\r\n  const { nightMode, setNightMode } = useContext(NightMode);\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__container container\">\r\n        <div className=\"header__logo\">Todo List</div>\r\n        <div className=\"header__rightContainer\">\r\n          <div\r\n            className=\"header__nightMode\"\r\n            onClick={() => setNightMode(!nightMode)}\r\n          >\r\n            <div className=\"header__nightModeContainer\">\r\n              <div className=\"header__nightModeDay\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"#fbff8c\"\r\n                  className=\"day\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M12 8a4 4 0 1 1-8 0 4 4 0 0 1 8 0zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n                </svg>\r\n              </div>\r\n              <div className=\"header__nightModeMoon\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"moon\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z\" />\r\n                </svg>\r\n              </div>\r\n              <div\r\n                className={\r\n                  nightMode\r\n                    ? \"header__nightModeBtn day\"\r\n                    : \"header__nightModeBtn moon\"\r\n                }\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <button className=\"header__login\">INICIAR SESION</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createContext, useState } from \"react\";\r\n\r\nconst CrudContext = createContext();\r\n\r\nconst CrudProvider = ({ children }) => {\r\n  const [db, setDb] = useState([]);\r\n  const [dataToEdit, setDataToEdit] = useState(null);\r\n\r\n  const createHomework = (data) => {\r\n    data.id = Date.now();\r\n    setDb([...db, data]);\r\n  };\r\n  const updateHomework = (data) => {\r\n    let newData = db.map((el) => (el.id === data.id ? data : el));\r\n    setDb(newData);\r\n  };\r\n  const deleteHomework = (id) => {\r\n    let confirmDelete = window.confirm(\"Desea Eliminar esta tarea\");\r\n    if (confirmDelete) {\r\n      let homeworkDelete = db.filter((item) => item.id !== id);\r\n      setDb(homeworkDelete);\r\n    }\r\n  };\r\n  const completeHomework = (data) => {\r\n    data.complete = true;\r\n  };\r\n\r\n  const data = {\r\n    db,\r\n    setDb,\r\n    dataToEdit,\r\n    setDataToEdit,\r\n    createHomework,\r\n    updateHomework,\r\n    deleteHomework,\r\n    completeHomework,\r\n  };\r\n  return <CrudContext.Provider value={data}>{children}</CrudContext.Provider>;\r\n};\r\nexport { CrudProvider };\r\nexport default CrudContext;\r\n","import React, { useState, useContext } from \"react\";\r\nimport CrudContext from \"../context/CrudContext\";\r\nimport NightMode from \"../context/NightMode\";\r\n\r\nconst Homework = ({ item }) => {\r\n  const { setDataToEdit, completeHomework, deleteHomework } =\r\n    useContext(CrudContext);\r\n  const [description, setDescription] = useState(false);\r\n  const [complete, setComplete] = useState(false);\r\n  const { nightMode } = useContext(NightMode);\r\n  const edit = (item) => {\r\n    if (!item.complete) setDataToEdit(item);\r\n    else {\r\n      alert(\"No se puede editar una tarea completada\");\r\n    }\r\n  };\r\n  const completefunction = () => {\r\n    completeHomework(item);\r\n    setComplete(true);\r\n  };\r\n  return (\r\n    <div className=\"homework__container\">\r\n      <div className=\"homework__titleContainer\">\r\n        <h4\r\n          className={\r\n            complete ? \"homework__titleComplete\" : \"homework__titleIncomplete\"\r\n          }\r\n          onClick={() => setDescription(!description)}\r\n        >\r\n          {item.title}\r\n        </h4>\r\n        <div className=\"homework__itemsContainer\">\r\n          <div className=\"homework__edit item\" onClick={() => edit(item)}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"20\"\r\n              height=\"20\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-pencil-fill\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" />\r\n            </svg>\r\n          </div>\r\n          <div\r\n            className=\"homework__check item\"\r\n            onClick={() => completefunction(item)}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"20\"\r\n              height=\"20\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-check2\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\" />\r\n            </svg>\r\n          </div>\r\n          <div\r\n            className=\"homework__delete item\"\r\n            onClick={() => deleteHomework(item.id)}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"20\"\r\n              height=\"20\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-trash\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={\r\n          description === false\r\n            ? \"homework_descriptionContainerDesactive\"\r\n            : \"homework_descriptionContainerActive\"\r\n        }\r\n      >\r\n        <div\r\n          className={\r\n            nightMode\r\n              ? \"homework__descriptionDay\"\r\n              : \"homework__descriptionNight\"\r\n          }\r\n        >\r\n          {item.activity}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homework;\r\n","import { createContext, useState } from \"react\";\r\n\r\nconst ModalContext = createContext();\r\n\r\nconst ModalProvider = ({ children }) => {\r\n  const [modal, setModal] = useState(false);\r\n  const data = { modal, setModal };\r\n\r\n  return <ModalContext.Provider value={data}>{children}</ModalContext.Provider>;\r\n};\r\nexport { ModalProvider };\r\nexport default ModalContext;\r\n","import React, { useContext } from \"react\";\r\nimport ModalContext from \"../context/ModalContext\";\r\n\r\nconst ModalForm = ({ children }) => {\r\n  const { modal } = useContext(ModalContext);\r\n  return (\r\n    <div className={!modal ? \"modal desactive\" : \" modal\"}>\r\n      <div className=\"modal__container\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalForm;\r\n","import React, { useContext } from \"react\";\r\nimport ModalContext from \"../context/ModalContext\";\r\n\r\nconst Add = ({ setForm, initialForm }) => {\r\n  const { setModal } = useContext(ModalContext);\r\n  const add = () => {\r\n    setModal(true);\r\n    setForm(initialForm);\r\n  };\r\n  return (\r\n    <div>\r\n      <button className=\"main__addBtn\" onClick={add}>\r\n        Crear\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport Homework from \"./Homework\";\r\nimport ModalForm from \"./ModalForm\";\r\nimport Add from \"./Add\";\r\nimport NightMode from \"../context/NightMode\";\r\nimport ModalContext from \"../context/ModalContext\";\r\nimport CrudContext from \"../context/CrudContext\";\r\nconst initialForm = {\r\n  title: \"\",\r\n  activity: \"\",\r\n  id: null,\r\n  complete: false,\r\n};\r\nconst Main = () => {\r\n  const [form, setForm] = useState(initialForm);\r\n  const { modal, setModal } = useContext(ModalContext);\r\n  const { db, createHomework, dataToEdit, updateHomework } =\r\n    useContext(CrudContext);\r\n\r\n  useEffect(() => {\r\n    if (dataToEdit) {\r\n      setForm(dataToEdit);\r\n      setModal(true);\r\n    } else {\r\n      setForm(initialForm);\r\n    }\r\n  }, [dataToEdit]);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!form.title || !form.activity) {\r\n      alert(\"Completar el formulario\");\r\n      return;\r\n    }\r\n    if (form.id === null) {\r\n      createHomework(form);\r\n    } else {\r\n      updateHomework(form);\r\n    }\r\n    setModal(!modal);\r\n  };\r\n  const cancel = () => {\r\n    setModal(false);\r\n    setForm(initialForm);\r\n  };\r\n  const { nightMode } = useContext(NightMode);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"main__container container\">\r\n        <Add db={db} setForm={setForm} initialForm={initialForm} />\r\n        {db.length !== 0 ? (\r\n          db.map((item) => <Homework key={item.id} item={item} />)\r\n        ) : (\r\n          <h4\r\n            className={\r\n              nightMode ? \"main__homeworkTextDay\" : \"main__homeworkTextNight\"\r\n            }\r\n          >\r\n            No hay tareas\r\n          </h4>\r\n        )}\r\n      </div>\r\n      <ModalForm>\r\n        <form className=\"modal__form\" onSubmit={handleSubmit}>\r\n          <label htmlFor=\"tarea\" className=\"modal__title\">\r\n            Titulo\r\n            <input\r\n              type=\"text\"\r\n              id=\"tarea\"\r\n              name=\"title\"\r\n              value={form.title}\r\n              className=\"modal__inputTitle\"\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor=\"activity\" className=\"modal__activity\">\r\n            Que Hacer?\r\n            <textarea\r\n              onChange={handleChange}\r\n              className=\"modal__inputActivity\"\r\n              name=\"activity\"\r\n              value={form.activity}\r\n              id=\"activity\"\r\n              cols=\"20\"\r\n              rows=\"10\"\r\n            ></textarea>\r\n          </label>\r\n          <div className=\"modal__buttonContainer\">\r\n            <input type=\"submit\" value=\"Aceptar\" className=\"modal__btnSubmit\" />\r\n            <button className=\"modal__buttonCancel\" onClick={cancel}>\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </ModalForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useContext } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport { CrudProvider } from \"./context/CrudContext\";\nimport { ModalProvider } from \"./context/ModalContext\";\nimport NightMode from \"./context/NightMode\";\nimport \"./sass/page/home.scss\";\n\nfunction App() {\n  const { nightMode } = useContext(NightMode);\n  return (\n    <>\n      <ModalProvider>\n        <CrudProvider>\n          <div className={nightMode ? \"todolist\" : \"todolist moonContainer\"}>\n            <Header />\n            <Main />\n          </div>\n        </CrudProvider>\n      </ModalProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"../App\";\r\nimport { NightModeProvider } from \"../context/NightMode\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <NightModeProvider>\r\n        <App />\r\n      </NightModeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Home from \"./components/Home\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}